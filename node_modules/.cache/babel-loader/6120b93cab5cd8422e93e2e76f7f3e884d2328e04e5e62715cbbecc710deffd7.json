{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\source\\\\repos\\\\budget-manager-frontend\\\\src\\\\components\\\\TransactionList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Layout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = ({\n  transactions,\n  onEdit\n}) => {\n  _s();\n  const [editingTransaction, setEditingTransaction] = useState(null);\n  const handleEdit = transaction => {\n    setEditingTransaction(transaction);\n    if (onEdit) {\n      onEdit(transaction);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-history\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"transaction-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-title\",\n              children: transaction.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `transaction-amount ${transaction.amount >= 0 ? 'positive' : ''}`,\n              children: [transaction.amount, \" kr\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-date\",\n              children: new Date(transaction.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(transaction),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionList, \"h9KacK7hTfWYyqVQ+H2Wx0nkgXk=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TransactionList","transactions","onEdit","_s","editingTransaction","setEditingTransaction","handleEdit","transaction","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","title","amount","Date","date","toLocaleDateString","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/andre/source/repos/budget-manager-frontend/src/components/TransactionList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../Layout.css';\r\n\r\nconst TransactionList = ({ transactions, onEdit }) => {\r\n    const [editingTransaction, setEditingTransaction] = useState(null);\r\n\r\n    const handleEdit = (transaction) => {\r\n        setEditingTransaction(transaction);\r\n        if (onEdit) {\r\n            onEdit(transaction);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Transaction History</h2>\r\n            <div className=\"transaction-history\">\r\n                <ul>\r\n                    {transactions.map((transaction) => (\r\n                        <li key={transaction.id} className=\"transaction-row\">\r\n                            <div className=\"transaction-details\">\r\n                                <span className=\"transaction-title\">{transaction.title}</span>\r\n                                <span\r\n                                    className={`transaction-amount ${transaction.amount >= 0 ? 'positive' : ''\r\n                                        }`}\r\n                                >\r\n                                    {transaction.amount} kr\r\n                                </span>\r\n                                <span className=\"transaction-date\">\r\n                                    {new Date(transaction.date).toLocaleDateString()}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"transaction-actions\">\r\n                                <button onClick={() => handleEdit(transaction)}>Edit</button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,eAAe,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMS,UAAU,GAAIC,WAAW,IAAK;IAChCF,qBAAqB,CAACE,WAAW,CAAC;IAClC,IAAIL,MAAM,EAAE;MACRA,MAAM,CAACK,WAAW,CAAC;IACvB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bb,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAL,QAAA,eAChCT,OAAA;QAAAS,QAAA,EACKP,YAAY,CAACa,GAAG,CAAEP,WAAW,iBAC1BR,OAAA;UAAyBc,SAAS,EAAC,iBAAiB;UAAAL,QAAA,gBAChDT,OAAA;YAAKc,SAAS,EAAC,qBAAqB;YAAAL,QAAA,gBAChCT,OAAA;cAAMc,SAAS,EAAC,mBAAmB;cAAAL,QAAA,EAAED,WAAW,CAACQ;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9Db,OAAA;cACIc,SAAS,EAAE,sBAAsBN,WAAW,CAACS,MAAM,IAAI,CAAC,GAAG,UAAU,GAAG,EAAE,EACnE;cAAAR,QAAA,GAEND,WAAW,CAACS,MAAM,EAAC,KACxB;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPb,OAAA;cAAMc,SAAS,EAAC,kBAAkB;cAAAL,QAAA,EAC7B,IAAIS,IAAI,CAACV,WAAW,CAACW,IAAI,CAAC,CAACC,kBAAkB,CAAC;YAAC;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNb,OAAA;YAAKc,SAAS,EAAC,qBAAqB;YAAAL,QAAA,eAChCT,OAAA;cAAQqB,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACC,WAAW,CAAE;cAAAC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC;QAAA,GAfDL,WAAW,CAACc,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBnB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACT,EAAA,CAtCIH,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAwCrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}