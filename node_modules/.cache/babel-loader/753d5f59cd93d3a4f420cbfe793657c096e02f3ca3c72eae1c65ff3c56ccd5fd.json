{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\source\\\\repos\\\\budget-manager-frontend\\\\src\\\\components\\\\TransactionList.js\",\n  _s = $RefreshSig$();\nimport react, { useEffect, useState } from 'react';\nimport { fetchTransactions } from '../services/api';\nimport '../Layout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = ({\n  categoryId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState(null);\n  const [editingTransaction, setEditTransaction] = useState(null);\n  const handleEdit = transaction => {\n    setEditTransaction(transaction);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await fetchTransactions(categoryId);\n        setTransactions(result);\n      } catch (err) {\n        setError('Failed to fetch transactions');\n      }\n    };\n    if (categoryId) {\n      fetchData();\n    }\n  }, [categoryId]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-history\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"transaction-title\",\n            children: [\" \", transaction.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `transaction-amount ${transaction.amount >= 0 ? 'positive' : ''}`,\n            children: [transaction.amount, \" kr\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"transaction-date\",\n            children: new Date(transaction.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(transaction),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), \") }\"]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), editingTransaction && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async e => {\n        e.preventDefault();\n        try {\n          console.log('Transaction updated:', editingTransaction);\n          setEditingTransaction(null);\n        } catch (err) {\n          console.error('Failed to update transaction');\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: editingTransaction.amount,\n        onChange: e => setEditingTransaction({\n          ...editingTransaction,\n          amount: parseFloat(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditingTransaction(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionList, \"ULAHuk4tJObBkRAlJnZDjZh+4yo=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["react","useEffect","useState","fetchTransactions","jsxDEV","_jsxDEV","TransactionList","categoryId","_s","transactions","setTransactions","error","setError","editingTransaction","setEditTransaction","handleEdit","transaction","fetchData","result","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","title","amount","Date","date","toLocaleDateString","onClick","id","onSubmit","e","preventDefault","console","log","setEditingTransaction","type","value","onChange","parseFloat","target","_c","$RefreshReg$"],"sources":["C:/Users/andre/source/repos/budget-manager-frontend/src/components/TransactionList.js"],"sourcesContent":["import react, { useEffect, useState } from 'react';\r\nimport { fetchTransactions } from '../services/api'; \r\nimport '../Layout.css';\r\n\r\nconst TransactionList = ({ categoryId }) => {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [editingTransaction, setEditTransaction] = useState(null);\r\n\r\n    const handleEdit = (transaction) => {\r\n        setEditTransaction(transaction);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await fetchTransactions(categoryId);\r\n                setTransactions(result);\r\n            } catch (err) {\r\n                setError('Failed to fetch transactions');\r\n            }\r\n        };\r\n        if (categoryId) {\r\n            fetchData();\r\n        }\r\n\r\n    }, [categoryId]);\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Transaction History</h2>\r\n            <div className=\"transaction-history\">\r\n            <ul>\r\n                {transactions.map((transaction) => (\r\n                    <li key={transaction.id}>\r\n                        <span className=\"transaction-title\"> {transaction.title}</span>\r\n                        <span className={`transaction-amount ${transaction.amount >= 0 ? 'positive' : ''\r\n                            }`}\r\n                        >\r\n                            {transaction.amount} kr\r\n                        </span>\r\n                        <span className=\"transaction-date\">\r\n                            {new Date(transaction.date).toLocaleDateString()}\r\n                        </span>\r\n                        <button onClick={() => handleEdit(transaction)}>Edit</button>) }\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            </div>\r\n            {editingTransaction && (\r\n                <form\r\n                    onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        try {\r\n                            console.log('Transaction updated:', editingTransaction);\r\n                            setEditingTransaction(null);\r\n                        } catch (err) {\r\n                            console.error('Failed to update transaction');\r\n                        }\r\n                    }}\r\n                >\r\n                    <h3>Edit Transaction</h3>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={editingTransaction.amount}\r\n                        onChange={(e) => setEditingTransaction({\r\n                            ...editingTransaction,\r\n                            amount: parseFloat(e.target.value),\r\n                        })\r\n\r\n                        }\r\n                    />\r\n                    <button type=\"submit\">Save</button>\r\n                    <button onClick={() => setEditingTransaction(null)}>Cancel</button>\r\n                </form>\r\n            )} \r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default TransactionList;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM,CAACW,kBAAkB,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE/D,MAAMa,UAAU,GAAIC,WAAW,IAAK;IAChCF,kBAAkB,CAACE,WAAW,CAAC;EACnC,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMf,iBAAiB,CAACI,UAAU,CAAC;QAClDG,eAAe,CAACQ,MAAM,CAAC;MAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVP,QAAQ,CAAC,8BAA8B,CAAC;MAC5C;IACJ,CAAC;IACD,IAAIL,UAAU,EAAE;MACZU,SAAS,CAAC,CAAC;IACf;EAEJ,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAChB,IAAII,KAAK,EAAE;IACP,oBAAON,OAAA;MAAAe,QAAA,EAAMT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EACA,oBACInB,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA;MAAKoB,SAAS,EAAC,qBAAqB;MAAAL,QAAA,eACpCf,OAAA;QAAAe,QAAA,EACKX,YAAY,CAACiB,GAAG,CAAEV,WAAW,iBAC1BX,OAAA;UAAAe,QAAA,gBACIf,OAAA;YAAMoB,SAAS,EAAC,mBAAmB;YAAAL,QAAA,GAAC,GAAC,EAACJ,WAAW,CAACW,KAAK;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/DnB,OAAA;YAAMoB,SAAS,EAAE,sBAAsBT,WAAW,CAACY,MAAM,IAAI,CAAC,GAAG,UAAU,GAAG,EAAE,EACzE;YAAAR,QAAA,GAEFJ,WAAW,CAACY,MAAM,EAAC,KACxB;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPnB,OAAA;YAAMoB,SAAS,EAAC,kBAAkB;YAAAL,QAAA,EAC7B,IAAIS,IAAI,CAACb,WAAW,CAACc,IAAI,CAAC,CAACC,kBAAkB,CAAC;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,eACPnB,OAAA;YAAQ2B,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACC,WAAW,CAAE;YAAAI,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,OACjE;QAAA,GAXSR,WAAW,CAACiB,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWnB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACLX,kBAAkB,iBACfR,OAAA;MACI6B,QAAQ,EAAE,MAAOC,CAAC,IAAK;QACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAI;UACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEzB,kBAAkB,CAAC;UACvD0B,qBAAqB,CAAC,IAAI,CAAC;QAC/B,CAAC,CAAC,OAAOpB,GAAG,EAAE;UACVkB,OAAO,CAAC1B,KAAK,CAAC,8BAA8B,CAAC;QACjD;MACJ,CAAE;MAAAS,QAAA,gBAEFf,OAAA;QAAAe,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBnB,OAAA;QACImC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAE5B,kBAAkB,CAACe,MAAO;QACjCc,QAAQ,EAAGP,CAAC,IAAKI,qBAAqB,CAAC;UACnC,GAAG1B,kBAAkB;UACrBe,MAAM,EAAEe,UAAU,CAACR,CAAC,CAACS,MAAM,CAACH,KAAK;QACrC,CAAC;MAEA;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACFnB,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAAApB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnCnB,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMO,qBAAqB,CAAC,IAAI,CAAE;QAAAnB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAId,CAAC;AAAChB,EAAA,CAhFIF,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AAkFrB,eAAeA,eAAe;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}