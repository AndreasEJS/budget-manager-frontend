{"ast":null,"code":"import React,{useEffect,useState}from'react';import{fetchCategorySummary,fetchDateSummary}from'../services/api';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const Analytics=_ref=>{let{refreshKey}=_ref;const[categoryData,setCategoryData]=useState(null);const[dateData,setDateData]=useState(null);const[error,setError]=useState(null);useEffect(()=>{const fetchData=async()=>{try{const categorySummary=await fetchCategorySummary();const dateSummary=await fetchDateSummary();const formattedCategoryData={labels:categorySummary.map(item=>item.category),datasets:[{label:\"Total Amount per Category\",data:categorySummary.map(item=>item.totalAmount),backgroundColor:'rgba(75, 192, 192, 0.2)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]};const formattedDateData={labels:dateSummary.map(item=>new Date(item.date).toLocaleDateString()),datasets:[{label:\"Total Amount per Date\",data:dateSummary.map(item=>item.totalAmount),backgroundColor:'rgba(153, 102, 255, 0.2)',borderColor:'rgba(153, 102, 255, 1)',borderWidth:1}]};setCategoryData(formattedCategoryData);setDateData(formattedDateData);}catch(err){setError('Failed to fetch analytics data');}};fetchData();},[refreshKey]);if(error){return/*#__PURE__*/_jsx(\"div\",{children:error});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Analytics\"}),categoryData&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Category Summary\"}),/*#__PURE__*/_jsx(Bar,{data:categoryData,redraw:true})]}),dateData&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Date Summary\"}),/*#__PURE__*/_jsx(Bar,{data:dateData,redraw:true})]})]});};export default Analytics;","map":{"version":3,"names":["React","useEffect","useState","fetchCategorySummary","fetchDateSummary","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","Analytics","_ref","refreshKey","categoryData","setCategoryData","dateData","setDateData","error","setError","fetchData","categorySummary","dateSummary","formattedCategoryData","labels","map","item","category","datasets","label","data","totalAmount","backgroundColor","borderColor","borderWidth","formattedDateData","Date","date","toLocaleDateString","err","children","redraw"],"sources":["C:/Users/andre/source/repos/budget-manager-frontend/src/components/Analytics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchCategorySummary, fetchDateSummary } from '../services/api';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Analytics = ({refreshKey }) => {\r\n    const [categoryData, setCategoryData] = useState(null);\r\n    const [dateData, setDateData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const categorySummary = await fetchCategorySummary();\r\n                const dateSummary = await fetchDateSummary();\r\n\r\n                const formattedCategoryData = {\r\n                    labels: categorySummary.map(item => item.category),\r\n                    datasets: [\r\n                        {\r\n                            label: \"Total Amount per Category\",\r\n                            data: categorySummary.map(item => item.totalAmount),\r\n                            backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                            borderColor: 'rgba(75, 192, 192, 1)',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                };\r\n\r\n                const formattedDateData = {\r\n                    labels: dateSummary.map(item => new Date(item.date).toLocaleDateString()),\r\n                    datasets: [\r\n                        {\r\n                            label: \"Total Amount per Date\",\r\n                            data: dateSummary.map(item => item.totalAmount),\r\n                            backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                            borderColor: 'rgba(153, 102, 255, 1)',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                };\r\n\r\n                setCategoryData(formattedCategoryData);\r\n                setDateData(formattedDateData);\r\n            } catch (err) {\r\n                setError('Failed to fetch analytics data');\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [refreshKey]);\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Analytics</h2>\r\n            {categoryData && (\r\n                <div>\r\n                    <h3>Category Summary</h3>\r\n                    <Bar data={categoryData} redraw />\r\n                    \r\n                </div>\r\n            )}\r\n            {dateData && (\r\n                <div>\r\n                    <h3>Date Summary</h3>\r\n                    <Bar data={dateData} redraw/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}