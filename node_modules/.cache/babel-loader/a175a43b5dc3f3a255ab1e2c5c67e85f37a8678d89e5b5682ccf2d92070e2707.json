{"ast":null,"code":"import'./Layout.css';import CategorySummary from'./components/CategorySummary';import TransactionList from'./components/TransactionList';import AddTransaction from'./components/AddTransaction';import Analytics from'./components/Analytics';import{useEffect,useState}from'react';import{fetchTransactions,updateTransaction,deleteTransaction}from'./services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[transactions,setTransactions]=useState([]);const[refreshKey,setRefreshKey]=useState(0);const fetchAllTransactions=async()=>{const data=await fetchTransactions();setTransactions(data);};const handleTransactionAdded=()=>{setRefreshKey(prevKey=>prevKey+1);fetchAllTransactions();};const handleEditTransaction=async editedTransaction=>{try{await updateTransaction(editedTransaction);// Uppdatera transaktionen via API\nsetRefreshKey(prevKey=>prevKey+1);// Uppdatera refreshKey f�r att trigga ny fetch\nfetchAllTransactions();// H�mta uppdaterade transaktioner\n}catch(error){console.error(\"Failed to edit transaction:\",error);}};const handleDeleteTransaction=async transactionId=>{try{await deleteTransaction(transactionId);// Ta bort transaktionen via API\nsetRefreshKey(prevKey=>prevKey+1);// Trigga omrendering f�r alla komponenter\nfetchAllTransactions();// Uppdatera transaktionslistan\n}catch(error){console.error(\"Failed to delete transaction:\",error);}};useEffect(()=>{fetchAllTransactions();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Svedbucks\"})}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:/*#__PURE__*/_jsx(CategorySummary,{refreshKey:refreshKey})}),/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:/*#__PURE__*/_jsx(AddTransaction,{onTransactionAdded:handleTransactionAdded})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"section\",children:/*#__PURE__*/_jsx(TransactionList,{transactions:transactions,onEdit:handleEditTransaction// Skickar redigeringsfunktionen som prop\n,onDelete:handleDeleteTransaction})}),/*#__PURE__*/_jsx(\"div\",{className:\"section\",children:/*#__PURE__*/_jsx(Analytics,{refreshKey:refreshKey})})]})]});}export default App;","map":{"version":3,"names":["CategorySummary","TransactionList","AddTransaction","Analytics","useEffect","useState","fetchTransactions","updateTransaction","deleteTransaction","jsx","_jsx","jsxs","_jsxs","App","transactions","setTransactions","refreshKey","setRefreshKey","fetchAllTransactions","data","handleTransactionAdded","prevKey","handleEditTransaction","editedTransaction","error","console","handleDeleteTransaction","transactionId","className","children","onTransactionAdded","onEdit","onDelete"],"sources":["C:/Users/andre/source/repos/budget-manager-frontend/src/App.js"],"sourcesContent":["import './Layout.css';\nimport CategorySummary from './components/CategorySummary';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport Analytics from './components/Analytics';\nimport { useEffect, useState } from 'react';\nimport { fetchTransactions, updateTransaction, deleteTransaction } from './services/api';\n\nfunction App() {\n    const [transactions, setTransactions] = useState([]);\n    const [refreshKey, setRefreshKey] = useState(0);\n    \n\n    const fetchAllTransactions = async () => {\n        const data = await fetchTransactions();\n        setTransactions(data);\n    };\n\n    const handleTransactionAdded = () => {\n        setRefreshKey((prevKey) => prevKey + 1);\n        fetchAllTransactions();\n    };\n\n    const handleEditTransaction = async (editedTransaction) => {\n        try {\n            await updateTransaction(editedTransaction); // Uppdatera transaktionen via API\n            setRefreshKey((prevKey) => prevKey + 1); // Uppdatera refreshKey f�r att trigga ny fetch\n            fetchAllTransactions(); // H�mta uppdaterade transaktioner\n        } catch (error) {\n            console.error(\"Failed to edit transaction:\", error);\n        }\n    };\n    const handleDeleteTransaction = async (transactionId) => {\n        try {\n            await deleteTransaction(transactionId); // Ta bort transaktionen via API\n            setRefreshKey((prevKey) => prevKey + 1); // Trigga omrendering f�r alla komponenter\n            fetchAllTransactions(); // Uppdatera transaktionslistan\n        } catch (error) {\n            console.error(\"Failed to delete transaction:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchAllTransactions();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Svedbucks</h1>\n            </header>\n            <main>\n                <div className=\"flex-container\">\n                    <div className=\"column\">\n                        <CategorySummary refreshKey={refreshKey} />\n                    </div>\n                    <div className=\"column\">\n                        <AddTransaction onTransactionAdded={handleTransactionAdded} />\n                    </div>\n                </div>\n                <div className=\"section\">\n                    <TransactionList\n                        transactions={transactions}\n                        onEdit={handleEditTransaction} // Skickar redigeringsfunktionen som prop\n                        onDelete={handleDeleteTransaction}\n                    />\n                </div>\n                <div className=\"section\">\n                    <Analytics refreshKey={refreshKey} />\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}