{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\source\\\\repos\\\\budget-manager-frontend\\\\src\\\\components\\\\TransactionList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchTransactions, updateTransaction } from '../services/api';\nimport '../Layout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = ({\n  categoryId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState(null);\n  const [editingTransaction, setEditingTransaction] = useState(null);\n  const handleEdit = transaction => {\n    setEditingTransaction(transaction);\n  };\n  const fetchData = async () => {\n    try {\n      const result = await fetchTransactions(categoryId);\n      setTransactions(result);\n    } catch (err) {\n      setError('Failed to fetch transactions');\n    }\n  };\n  useEffect(() => {\n    if (categoryId) {\n      fetchData();\n    }\n  }, [categoryId]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-history\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"transaction-title\",\n            children: transaction.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `transaction-amount ${transaction.amount >= 0 ? 'positive' : ''}`,\n            children: [transaction.amount, \" kr\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"transaction-date\",\n            children: new Date(transaction.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(transaction),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), editingTransaction && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async e => {\n        e.preventDefault();\n        try {\n          await updateTransaction(editingTransaction);\n          setEditingTransaction(null);\n          fetchData();\n        } catch (err) {\n          console.error('Failed to update transaction:', err);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTransaction.title,\n        onChange: e => setEditingTransaction({\n          ...editingTransaction,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: editingTransaction.amount,\n        onChange: e => setEditingTransaction({\n          ...editingTransaction,\n          amount: parseFloat(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditingTransaction(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionList, \"aZo7FdwpNo6rlfq9EFWtdvHmY6s=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useEffect","useState","fetchTransactions","updateTransaction","jsxDEV","_jsxDEV","TransactionList","categoryId","_s","transactions","setTransactions","error","setError","editingTransaction","setEditingTransaction","handleEdit","transaction","fetchData","result","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","title","amount","Date","date","toLocaleDateString","onClick","id","onSubmit","e","preventDefault","console","type","value","onChange","target","parseFloat","_c","$RefreshReg$"],"sources":["C:/Users/andre/source/repos/budget-manager-frontend/src/components/TransactionList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchTransactions, updateTransaction } from '../services/api';\r\nimport '../Layout.css';\r\n\r\nconst TransactionList = ({ categoryId }) => {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [editingTransaction, setEditingTransaction] = useState(null);\r\n\r\n    const handleEdit = (transaction) => {\r\n        setEditingTransaction(transaction);\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const result = await fetchTransactions(categoryId);\r\n            setTransactions(result);\r\n        } catch (err) {\r\n            setError('Failed to fetch transactions');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (categoryId) {\r\n            fetchData();\r\n        }\r\n    }, [categoryId]);\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Transaction History</h2>\r\n            <div className=\"transaction-history\">\r\n                <ul>\r\n                    {transactions.map((transaction) => (\r\n                        <li key={transaction.id}>\r\n                            <span className=\"transaction-title\">{transaction.title}</span>\r\n                            <span\r\n                                className={`transaction-amount ${transaction.amount >= 0 ? 'positive' : ''\r\n                                    }`}\r\n                            >\r\n                                {transaction.amount} kr\r\n                            </span>\r\n                            <span className=\"transaction-date\">\r\n                                {new Date(transaction.date).toLocaleDateString()}\r\n                            </span>\r\n                            <button onClick={() => handleEdit(transaction)}>Edit</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {editingTransaction && (\r\n                <form\r\n                    onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        try {\r\n                            await updateTransaction(editingTransaction);\r\n                            setEditingTransaction(null);\r\n                            fetchData();\r\n                        } catch (err) {\r\n                            console.error('Failed to update transaction:', err);\r\n                        }\r\n                    }}\r\n                >\r\n                    <h3>Edit Transaction</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={editingTransaction.title}\r\n                        onChange={(e) =>\r\n                            setEditingTransaction({ ...editingTransaction, title: e.target.value })\r\n                        }\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={editingTransaction.amount}\r\n                        onChange={(e) =>\r\n                            setEditingTransaction({\r\n                                ...editingTransaction,\r\n                                amount: parseFloat(e.target.value),\r\n                            })\r\n                        }\r\n                    />\r\n                    <button type=\"submit\">Save</button>\r\n                    <button onClick={() => setEditingTransaction(null)}>Cancel</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}