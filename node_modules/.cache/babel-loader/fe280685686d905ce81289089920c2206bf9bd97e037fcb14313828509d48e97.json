{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\source\\\\repos\\\\budget-manager-frontend\\\\src\\\\components\\\\Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchCategorySummary, fetchDateSummary } from '../services/api';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Analytics = () => {\n  _s();\n  const [categoryData, setCategoryData] = useState(null);\n  const [dateData, setDateData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const categorySummary = await fetchCategorySummary();\n        const dateSummary = await fetchDateSummary();\n        const formattedCategoryData = {\n          labels: categorySummary.map(item => item.category),\n          datasets: [{\n            label: \"Total Amount per Category\",\n            data: categorySummary.map(item => item.totalAmount),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        };\n        const formattedDateData = {\n          labels: dateSummary.map(item => new Date(item.date).toLocaleDateString()),\n          datasets: [{\n            label: \"Total Amount per Date\",\n            data: dateSummary.map(item => item.totalAmount),\n            backgroundColor: 'rgba(153, 102, 255, 0.2)',\n            borderColor: 'rgba(153, 102, 255, 1)',\n            borderWidth: 1\n          }]\n        };\n        setCategoryData(formattedCategoryData);\n        setDateData(formattedDateData);\n      } catch (err) {\n        setError('Failed to fetch analytics data');\n      }\n    };\n    fetchData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), categoryData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Category Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: categoryData,\n        redraw: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), dateData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Date Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: dateData,\n        redraw: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(Analytics, \"YlWDTeRMl9wmY3TDT0GoAH/tiNo=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useEffect","useState","fetchCategorySummary","fetchDateSummary","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Analytics","_s","categoryData","setCategoryData","dateData","setDateData","error","setError","fetchData","categorySummary","dateSummary","formattedCategoryData","labels","map","item","category","datasets","label","data","totalAmount","backgroundColor","borderColor","borderWidth","formattedDateData","Date","date","toLocaleDateString","err","children","fileName","_jsxFileName","lineNumber","columnNumber","redraw","_c","$RefreshReg$"],"sources":["C:/Users/andre/source/repos/budget-manager-frontend/src/components/Analytics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchCategorySummary, fetchDateSummary } from '../services/api';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Analytics = () => {\r\n    const [categoryData, setCategoryData] = useState(null);\r\n    const [dateData, setDateData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const categorySummary = await fetchCategorySummary();\r\n                const dateSummary = await fetchDateSummary();\r\n\r\n                const formattedCategoryData = {\r\n                    labels: categorySummary.map(item => item.category),\r\n                    datasets: [\r\n                        {\r\n                            label: \"Total Amount per Category\",\r\n                            data: categorySummary.map(item => item.totalAmount),\r\n                            backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                            borderColor: 'rgba(75, 192, 192, 1)',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                };\r\n\r\n                const formattedDateData = {\r\n                    labels: dateSummary.map(item => new Date(item.date).toLocaleDateString()),\r\n                    datasets: [\r\n                        {\r\n                            label: \"Total Amount per Date\",\r\n                            data: dateSummary.map(item => item.totalAmount),\r\n                            backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                            borderColor: 'rgba(153, 102, 255, 1)',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                };\r\n\r\n                setCategoryData(formattedCategoryData);\r\n                setDateData(formattedDateData);\r\n            } catch (err) {\r\n                setError('Failed to fetch analytics data');\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Analytics</h2>\r\n            {categoryData && (\r\n                <div>\r\n                    <h3>Category Summary</h3>\r\n                    <Bar data={categoryData} redraw />\r\n                    \r\n                </div>\r\n            )}\r\n            {dateData && (\r\n                <div>\r\n                    <h3>Date Summary</h3>\r\n                    <Bar data={dateData} redraw/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}